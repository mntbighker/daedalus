<?php

// Genral string functions

// snippet(phrase,[max length],[phrase tail])

function snippet($text,$length=600,$tail="...") {

  $text = trim($text);
  $txtl = strlen($text);

  if($txtl > $length) {
    for($i=1;$text[$length-$i]!=" ";$i++) {
      if($i == $length) {
        return substr($text,0,$length) . $tail;
      }
    }
    $text = substr($text,0,$length-$i+1) . $tail;
  }

  return $text;

} // End Function snippet


// snippetgreedy(phrase,[max length before next space],[phrase tail])
// It behaves greedy, gets length characters ore goes for more

function snippetgreedy($text,$length=64,$tail="...") {

  $text = trim($text);

  if(strlen($text) > $length) {
    for($i=0;$text[$length+$i]!=" ";$i++) {
      if(!$text[$length+$i]) {
        return $text;
      }
    }
    $text = substr($text,0,$length+$i) . $tail;
  }
  return $text;

} // End Function snippetgreedy


// The same as the snippet but removing latest low punctuation chars,
// if they exist (dots and commas). It performs a later suffixal trim of spaces

function snippetwop($text,$length=64,$tail="...") {

  $text = trim($text);
  $txtl = strlen($text);

  if($txtl > $length) {

    for($i=1;$text[$length-$i]!=" ";$i++) {
      if($i == $length) {
        return substr($text,0,$length) . $tail;
      }
    }

    for(;$text[$length-$i]=="," || $text[$length-$i]=="." || 
         $text[$length-$i]==" ";$i++) {;}

    $text = substr($text,0,$length-$i+1) . $tail;

  }

return $text;

} // End Function snippetwop


?>
