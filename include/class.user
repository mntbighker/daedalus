<?php

class User
{

    var $udata; # user data

    function User($name = "")
    {
        if($name != "")
        {
            $this->setName($name);
            $this->retrieve();
        }
    }
    
    function authenticate($u, $p) 
    {
        global $adb, $AUTHSOURCE, $cfg_serverroot;

        # TODO: MD5 Password hashes, encryption

        if($AUTHSOURCE == "DB")
        {
            $q = $adb->prepare("SELECT name FROM users WHERE name = '$u' AND password = '$p'");           
            $q->execute();
            $r = $q->fetchrow_hash();

            return $r['name'] ? 0 : 1;
 
        } else
        {
            PRINT "Error: No proper authorization source entered in config.inc.php";
        }
    }

    function retrieve()
    {
        global $adb;    

        $query = "SELECT password,fullname,email,building,phone,access,comments FROM users WHERE (name = '".$this->udata["Name"]."')";
        $sth = $adb->prepare($query);
        $res = $sth->execute();
        $result = $sth->fetchrow_hash();

        $this->udata["Password"] = $result["password"];
        $this->udata["Fullname"] = $result["fullname"];
        $this->udata["Email"] = $result["email"];
        $this->udata["Location"] = $result["building"];
        $this->udata["Phone"] = $result["phone"];
        $this->udata["Access"] = $result["access"];
        $this->udata["Comments"] = $result["comments"];
    }
	// TO-DO - Add error reporting return redirect back to setup-users
    function add()
    {
        global $adb;
        if($this->udata["Name"] == "")
        {
            PRINT "Error adding user: username not set, hit the back button to re-try<BR>\n";
            die(0);
        }
        if($this->udata["Password"] == "")
        {
            PRINT "Error adding user: password not set, hit the back button to re-try<BR>\n";
            die(0);
        }
        if($this->udata["Fullname"] == "")
        {
            PRINT "Error adding user: Fullname not set, hit the back button to re-try<BR>\n";
            die(0);
        }
        if($this->udata["Access"] == "")
        {
            PRINT "Error adding user: type not set, hit the back button to re-try<BR>\n";
            die(0);
        }
		$uExists = $this->exists($this->udata["Name"]);
		if($uExists)
		{
			PRINT "User \"".$this->udata['Name']."\" already exists, hit the back button to re-try<BR>\n";
			die(0);
		}

        $query = "INSERT INTO users VALUES ('".$this->udata["Name"]."', '".$this->udata["Password"]."', '".$this->udata["Fullname"]."', '".$this->udata["Email"]."', '".$this->udata["Location"]."', '".$this->udata["Phone"]."', '".$this->udata["Access"]."', '".$this->udata["Comments"]."')";
        $adb->dbh->exec($query);
    }
    
    function delete()
    {
        global $adb;
        if($this->udata["Name"] == "")
        {
            PRINT "Error deleting user: name not set<BR>\n";
        }

        $query = "DELETE FROM users WHERE (name = \"".$this->udata["Name"]."\")";
        $adb->dbh->exec($query);
    }

    function commit()
    {
        global $adb;
        if($this->udata["Name"] == "")
        {
            PRINT "Error updating user: name not set<BR>\n";
            return (0);
        }
        $query = "REPLACE users VALUES('".$this->udata["Name"]."', '".$this->udata["Password"]."', '".$this->udata["Fullname"]."', '".$this->udata["Email"]."', '".$this->udata["Location"]."', '".$this->udata["Phone"]."','".$this->udata["Access"]."', '".$this->udata["Comments"]."')";
        $adb->dbh->exec($query);
	}

	function getName()
	{
		return($this->udata["Name"]);
	}

	function getPassword()
	{
		print "Password: -".$this->udata["Password"]."-";		
		return($this->udata["Password"]);
	}

	function getFullname()
	{
		return($this->udata["Fullname"]);
	}

	function getEmail()
	{
		return($this->udata["Email"]);
	}

	function getLocation()
	{
		return($this->udata["Location"]);
	}

	function getPhone()
	{
		return($this->udata["Phone"]);
	}

	function getAccess()
	{
		// print "Access: -".$this->udata["Access"]."-";
		return($this->udata["Access"]);
	}

	function getComments()
	{
		return($this->udata["Comments"]);
	}

	function setName($name)
	{
		$this->udata["Name"] = $name;
	}

	function setPassword($pass)
	{	
		$this->udata["Password"] = $pass;
	}

	function setFullname($fname)
	{
		$this->udata["Fullname"] = $fname;
	}

	function setEmail($email)
	{
		$this->udata["Email"] = $email;
	}

	function setLocation($loc)
	{
		$this->udata["Location"] = $loc;
	}

	function setPhone($phone)
	{
		$this->udata["Phone"] = $phone;
	}

	function setAccess($type)
	{
		$this->udata["Access"] = $type;
	}

	function setComments($comment)
	{
		$this->udata["Comments"] = $comment;
	}

	function displayHeader()
	{
		PRINT "<TABLE WIDTH=\"100%\" BORDER=1 NOSHADE>\n";
		PRINT "<TR><TH><STRONG>Users</STRONG></TH></TR>\n";
	}

	function displayFooter()
	{
		PRINT "</TABLE>\n";
	}

	function display()
	{
		global $USERPREFIX;
		PRINT "<TR BGCOLOR=\"#DDDDDD\">\n";
		PRINT "<TD>";
		if($this->udata["Name"] == "")
		{
			PRINT "Error displaying user: Name not set<BR>\n";
		}
		$username_enc = str_replace(" ","%20", $this->udata["Name"]);
		PRINT $this->udata['Name']." (".$this->udata['Fullname'].")";
		PRINT " <A HREF=\"$USERPREFIX/setup-user-update.php?username=$username_enc&update=edit\">";
		PRINT "[edit]</A>";
                PRINT "<A HREF=\"$USERPREFIX/setup-user-update.php?update=delete&username=$username_enc\">";
               PRINT " [delete]</A>";
               PRINT "</TD>\n";
               PRINT "</TR>\n";
	}

	function displayAllUsers()
	{
		global $adb;
		User::displayHeader();
		$query = "SELECT name FROM users ORDER BY name ASC";
		$sth = $adb->prepare($query);
		if($sth)
		{
			$res = $sth->execute();

			while($result = $sth->fetchrow_hash())
			{
				
				$name = $result["name"];

				$user = new User($name);
				$user->display();
			}
		} else
		{
			PRINT "Could not prepare query: ".$sth->errstr."<BR>\n";
		}
		User::displayFooter();
	}

	function exists($name)
	{
		global $adb;
		$query = "SELECT * FROM users WHERE (name='$name')";
		$sth = $adb->prepare($query);
		if($sth)
		{
			$res = $sth->execute();
			$numRows = $sth->fetchAll();
			if ($numRows)
			{
				return(TRUE);
			} else
			{
				return(FALSE);
			}
		} else
		{
			PRINT "Could not prepare query: ".$sth->errstr."<BR>\n";
		}
	}

	function permissionCheck($priv)
	{


		if($priv == "admin")
		{
			if($this->udata["Access"] == "admin")
			{
				return(TRUE);
			} else
			{
				return(FALSE);
			}
		} else if($priv == "tech")
		{
			if(($this->udata["Access"] == "admin") || ($this->udata["Access"] == "tech"))
			{

				return(TRUE);

			} else
			{
				return(FALSE);
			}
		} else if($priv == "normal")
		{
			if(($this->udata["Access"] == "admin") || ($this->udata["Access"] == "tech") || ($this->udata["Access"] == "normal"))
			{
				return(TRUE);
			} else
			{
				return(FALSE);
			}
		} else if($priv == "post-only")
		{
			if(($this->udata["Access"] == "admin") || ($this->udata["Access"] == "tech") || ($this->udata["Access"] == "normal") || ($this->udata["Access"] == "post-only"))
			{
				return(TRUE);
			} else
			{
				return(FALSE);
			}
		} else
		{
			return(FALSE);
		}
	}
}

?>
